name: Upload Python Package

on:
  push:
    paths:
      - 'pyproject.toml'
  workflow_dispatch:

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Check Minor Version Change
        id: check_version
        run: |
          # Get the current version from pyproject.toml
          current_version=$(grep 'version =' pyproject.toml | cut -d '"' -f 2)
          echo "Current version: $current_version"

          # Get the last run version from GitHub variable
          last_version="${{ vars.LAST_VERSION }}"
          echo "Last version: $last_version"

          # Check if both versions are set
          if [ -z "$current_version" ] || [ -z "$last_version" ]; then
            echo "One of the version variables is empty. Exiting."
            exit 1
          fi

          # Compare versions
          IFS='.' read -r -a current_parts <<< "$current_version"
          IFS='.' read -r -a last_parts <<< "$last_version"

          if [ "${current_parts[0]}" -eq "${last_parts[0]}" ] && [ "${current_parts[1]}" -gt "${last_parts[1]}" ]; then
            echo "Minor version has changed. Terminating workflow."
            exit 1
          fi

          # Store the current version for future runs
          echo "current_version=$current_version" >> $GITHUB_ENV

      - name: Update LAST_VERSION variable
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/LAST_VERSION \
            -d "{\"value\":\"$current_version\"}"

      - name: build release distributions
        run: |
          # NOTE: put your own distribution build steps here.
          python -m pip install build
          python -m build

      - name: upload windows dists
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1